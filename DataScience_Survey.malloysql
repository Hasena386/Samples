>>>malloy
source: rawdata is duckdb.table('responses.csv') extend {   
    rename: survey_date is column00 
    rename: course_name is column01  
    rename: school is column02
    rename: webpage is column03
    rename: course_material is column04
    rename: instructors is column05
    rename: frequency is column06
    rename: no_of_students is column07
    rename: course_level is column08
    rename: programing_experience is column09
    rename: related_fields is column10
    rename: execution_pain is column11
    rename: data_science_tool is column12
    rename: extension is column13
    rename: access_type is column14
    rename: prog_language is column15
    rename: kernel is column16
    rename: assignment_ty is column17
    rename: question_ty is column18
    rename: grade is column19
    rename: exam_metrics is column20
    rename: other_metrics is column21
    rename: grading_pain is column22
    rename: other_uses is column23
    rename: suggestions is column24
view: filtered is {
     Select: survey_date,school,course_name,data_science_tool,prog_language,no_of_students,instructors,execution_pain
}
}

//format selected fields
Source:Populartools is rawdata->filtered extend {
     Dimension: 
          fmtdate is 
            pick concat(substr(survey_date::string,5,4),"-0",substr(survey_date::string,1,1),"-0",substr(survey_date::string,3,1)) 
            when substr(survey_date::string,2,1)="/" and substr(survey_date::string,4,1)="/"
            pick concat(substr(survey_date::string,6,4),"-0",substr(survey_date::string,1,1),"-",substr(survey_date::string,3,2)) 
            when substr(survey_date::string,2,1)="/" and substr(survey_date::string,5,1)="/"
            pick concat(substr(survey_date::string,6,4),"-",substr(survey_date::string,1,2),"-0",substr(survey_date::string,3,1)) 
            when substr(survey_date::string,3,1)="/" and substr(survey_date::string,5,1) = "/"
            pick concat(substr(survey_date::string,7,4),"-",substr(survey_date::string,1,2),"-",substr(survey_date::string,4,2)) 
            when substr(survey_date::string,3,1)="/" and substr(survey_date::string,6,1)="/"
            else null
           Survey_year is year(fmtdate::date)
           Survey_month is month(fmtdate::date)
           School is school
           Course is course_name
           Instructors is instructors
           Data_Science_Tool is data_science_tool
           Student_range is no_of_students
           Programming_Lanuguage is prog_language
           Challenges is execution_pain
           Jupyter_Notebook is regexp_extract(Data_Science_Tool,r'Jupyter notebook')
           JupyterHub is regexp_extract(Data_Science_Tool,r'JupyterHub')
           IPython_Parallel is regexp_extract(Data_Science_Tool,r'IPython parallel')
           IPython_Terminal is regexp_extract(Data_Science_Tool,r'IPython terminal')
           Interactive_Widgets is regexp_extract(Data_Science_Tool,r'Interactive widgets')
           nbconvert is regexp_extract(Data_Science_Tool,r'nbconvert')
           nbgrader is regexp_extract(Data_Science_Tool,r'nbgrader') 
     Measure:  
           No_of_sch_using_Jupyter_Notebook is count() {where:Jupyter_Notebook='Jupyter notebook' and school!=null and course_name!= null}
           No_of_sch_using_JupyterHub is count() {where:JupyterHub='JupyterHub' and school != null and course_name!=null}
           No_of_sch_using_IPython_Parallel is count() {where: IPython_Parallel='IPython parallel' and school !=null and course_name!=null}
           No_of_sch_using_IPython_Terminal is count() {where:IPython_Terminal='IPython terminal' and school !=null and course_name !=null}
           No_of_sch_using_Interactive_Widgets is count() {where:Interactive_Widgets='Interactive widgets' and school !=null and course_name!=null}
           No_of_sch_using_nbconvert is count() {where: nbconvert='nbconvert' and school !=null and course_name!=null} 
           No_of_sch_using_nbgrader is count() {where: nbgrader='nbgrader' and school !=null and course_name!=null}
           Tot_Schools is count() {where: school !=null}
           Tot_Courses is count() {where: course_name !=null}

View: Listrecords is {
     Select: School, Course, Instructors, Student_range, Programming_Lanuguage, Data_Science_Tool, Challenges 
     Order_by: School asc
}
View: Listnillrecords is { 
     Select:fmtdate,School,Course,Instructors,Student_range, Programming_Lanuguage, Data_Science_Tool, Challenges
     where:School =null
}

View:Schools_using_Jupyter_Notebook is {
     
     Group_by:Jupyter_Notebook
     Aggregate: Tot_Schools,Tot_Courses
     //Where: Jupyter_Notebook ='Jupyter notebook' and school != null and course_name !=null

} 
View:Schools_using_JupyterHub is {
     Group_by:JupyterHub
     Aggregate:Tot_Schools, Tot_Courses
     //where: JupyterHub ='JupyterHub' and school !=null and course_name!=null
}

View:Schools_using_IPython_Terminal is {
     Group_by:IPython_Terminal
     Aggregate:Tot_Schools, Tot_Courses
     //where: IPython_Terminal = 'IPython terminal' and school!=null and course_name!=null
}

View:Schools_using_IPython_Parallel is {
Group_by:IPython_Parallel
Aggregate:Tot_Schools, Tot_Courses
//where: IPython_Parallel = 'IPython parallel' and school!=null and course_name!=null
}

View:Schools_using_Interactive_Widgets is {
     Group_by:Interactive_Widgets
     Aggregate:Tot_Schools, Tot_Courses
}

View:Schools_using_nbgrader is {
     Group_by: nbgrader
     Aggregate: Tot_Schools, Tot_Courses
}

View: Schools_using_nbconvert is {
     Group_by:nbconvert
     Aggregate:Tot_Schools, Tot_Courses
}

View:summary_by_toolcombo is {
     Group_by: Jupyter_Notebook,JupyterHub,IPython_Terminal,IPython_Parallel,Interactive_Widgets,nbconvert,nbgrader
     Aggregate: Tot_Schools,Tot_Courses
     Order_by: Jupyter_Notebook,JupyterHub,IPython_Terminal, IPython_Parallel,Interactive_Widgets,nbconvert,nbgrader asc 
     
     }
View:summary_by_tool is {    
     Aggregate: No_of_sch_using_Jupyter_Notebook
     # bar_chart
     nest:Schools_using_Jupyter_Notebook 
     
     Aggregate: No_of_sch_using_JupyterHub
     # bar_chart
     nest: Schools_using_JupyterHub
     
     Aggregate: No_of_sch_using_IPython_Terminal
     # bar_chart
     nest: Schools_using_IPython_Terminal

     Aggregate: No_of_sch_using_IPython_Parallel
     # bar_chart
     nest: Schools_using_IPython_Parallel

     Aggregate: No_of_sch_using_Interactive_Widgets
     # bar_chart
     nest:Schools_using_Interactive_Widgets

     Aggregate: No_of_sch_using_nbconvert
     # bar_chart
     nest:Schools_using_nbconvert

     Aggregate:No_of_sch_using_nbgrader   
     # bar_chart
     nest:Schools_using_nbgrader

}
View: summary_by_school is {
     Group_by:school
     nest:summary_by_tool 
     Order_by:school   
}

View: Schools_using_IPythonP is {
     Aggregate:No_of_sch_using_IPython_Parallel
     nest:Listrecords
     where:IPython_Parallel='IPython parallel' and school=null and course_name!=null
}

// breakdown view of original DS field
View:by_dstool_combo is {
     
     Group_by:data_science_tool 
     Aggregate: Tot_Schools, Tot_Courses
     where:data_science_tool != regexp_extract(data_science_tool,r'Please indicate which of the following Jupyter/IPython tools your class is utilizing:')
     Order_by:data_science_tool asc
}

View: About_the_survey is {

     Group_by:Year_of_survey is Survey_year::string 
     Aggregate:No_of_sch_using_Jupyter_Notebook, 
     No_of_sch_using_JupyterHub, 
     No_of_sch_using_IPython_Terminal, 
     No_of_sch_using_IPython_Parallel, 
     No_of_sch_using_Interactive_Widgets,
     No_of_sch_using_nbconvert, 
     No_of_sch_using_nbgrader
     Order_by:Year_of_survey
    // # bar_chart
    // nest:Tools_Combo is by_dstool_combo
    // where:Survey_year !=null
     
}
}


run:Populartools->Listnillrecords
